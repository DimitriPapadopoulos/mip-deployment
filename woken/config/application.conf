
# Sample configuration for local execution of the woken

akka {
  log-dead-letters = 1
  log-dead-letters-during-shutdown = off
  loglevel = INFO

  actor {
    provider = "cluster"
    debug {
      receive = on
      autoreceive = off
      lifecycle = on
      fsm = on
      unhandled = on
      event-stream = off
    }
  }

  remote {
    log-sent-messages = off
    log-received-messages = off
    log-remote-lifecycle-events = off

    maximum-payload-bytes = 10000000 bytes

    netty.tcp {
      hostname = ${clustering.ip} # external (logical) hostname
      port = ${clustering.port}   # external (logical) port

      bind.hostname = 0.0.0.0         # internal (bind) hostname
      bind.port = ${clustering.port}  # internal (bind) port

      message-frame-size =  10000000b
      send-buffer-size =  10000000b
      receive-buffer-size =  10000000b
      maximum-frame-size = 10000000b
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://"${clustering.cluster.name}"@"${clustering.seed-ip}":"${clustering.seed-port}
    ]

    roles = ["woken"]

    role {
      woken.min-nr-of-members = 1
      validation.min-nr-of-members = 1
      scoring.min-nr-of-members = 1
    }

    client {
      initial-contacts = ["akka.tcp://"${clustering.cluster.name}"@"${clustering.seed-ip}":"${clustering.seed-port}"/system/receptionist"]
    }

  }
}

app {
  clusterSystemName = ${clustering.cluster.name}
  jobServiceName = "job-service"
  dockerBridgeNetwork = "webanalyticsstarter_default"
  networkInterface = "0.0.0.0"
  webServicesPort = 8087
  webServicesHttps = off

  master.router {
    actors {
      mining.limit = 10
      experiment.limit = 10
    }
  }

  basicAuth {
    user = "admin"
    password = "WoKeN"
  }
}

jobs {
  node = "federation"
  owner = "admin@mip.chuv.ch"
  chronosServerUrl = "http://chronos:4400"
  featuresDb = "features"
  featuresTable = "cde_features_a"
  resultDb = "woken"
  metaDb = "metadata"
}

db {
  woken {
    jdbc_driver="org.postgresql.Driver"
    jdbc_url="jdbc:postgresql://db:5432/woken"
    host = "db"
    port = 5432
    user="woken"
    password="wokenpwd"
  }

  features {
    jdbc_driver="org.postgresql.Driver"
    jdbc_url="jdbc:postgresql://db:5432/features"
    host = "db"
    port = 5432
    user="features"
    password="featurespwd"
  }

  metadata {
    jdbc_driver="org.postgresql.Driver"
    jdbc_url="jdbc:postgresql://db:5432/meta"
    host = "db"
    port = 5432
    user="meta"
    password="metapwd"
  }

}

datasets {

  chuv {
    label = "CHUV"
    description = "CHUV demo"
    anonymisationLevel = "Depersonalised"
    location {
      url = "ws://wokennode1:8087"
      basicAuth {
        user = "admin"
        password = "WoKeN"
      }
    }
  }

  brescia {
    label = "Brescia"
    description = "Brescia demo"
    anonymisationLevel = "Depersonalised"
    location {
      url = "ws://wokennode2:8087"
      basicAuth {
        user = "admin"
        password = "WoKeN"
      }
    }
  }

}
