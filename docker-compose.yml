version: '3.0'

services:
  db:
    image: postgres:11.3-alpine
    ports:
      - "5432:5432"
    hostname: db
    environment:
      POSTGRES_PASSWORD: test

  wait_dbs:
    image: "waisbrot/wait"
    restart: "no"
    environment:
      TARGETS: "db:5432"
      TIMEOUT: 60
    depends_on:
      - db

  create_dbs:
    image: "hbpmip/create-databases:1.1.0"
    restart: "no"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_ADMIN_USER: postgres
      DB_ADMIN_PASSWORD: test
      DB4: portal
      USER4: portal
      PASSWORD4: portalpwd
    depends_on:
      - db

  portalbackend:
    #image: hbpmip/portal-backend:5.0.5
    image: jerrypan44/portal-backend:latest
    restart: "no"
    ports:
      - "8080:8080"
      - "8089:8089"
    environment:
      PORTAL_DB_URL: jdbc:postgresql://db:5432/portal
      PORTAL_DB_SERVER: db:5432
      PORTAL_DB_USER: portal
      PORTAL_DB_PASSWORD: portalpwd
      CONTEXT_PATH: /services
      AUTHENTICATION: 1
      CLIENT_ID: medical-informatics-platform
      CLIENT_SECRET: dae83a6b-c769-4186-8383-f0984c6edf05
      FRONTEND_LOGIN_URL: http://88.197.53.106/services/login/hbp
      FRONTEND_AFTER_LOGIN_URL: http://88.197.53.106/
      FRONTEND_AFTER_LOGOUT_URL: http://88.197.53.106/services/login/hbp
      EXAREME_URL: http://88.197.53.106:9090
      GALAXY_CONTEXT: nativeGalaxy/workflows/list
      GALAXY_USERNAME: admin
      GALAXY_PASSWORD: password
      WORKFLOW_URL: http://88.197.53.106:8091/Galaxy_Middleware_API-1.0.0-SNAPSHOT/api
      JWT_SECRET: "secret"
      LOGGING_LEVEL_WEB: INFO
      LOGGING_LEVEL_HIBERNATE: INFO
      SESSION_TIMEOUT: 2592000
      RELEASE_STAGE: "testing"
      DATACENTER_LOCATION: "$HOST"
      CONTAINER_ORCHESTRATION: "docker-compose"
      #local keycloak
      #AUTH_URI: "http://195.134.66.237:8080/auth/realms/Demo/protocol/openid-connect/auth"
      #USER_INFO_URI: "http://195.134.66.237:8080/auth/realms/Demo/protocol/openid-connect/userinfo"
      #TOKEN_URI: "http://195.134.66.237:8080/auth/realms/Demo/protocol/openid-connect/token"
      
      # docker keycloak certificate
      AUTH_URI: "https://88.197.53.106:8095/auth/realms/MIP/protocol/openid-connect/auth"
      USER_INFO_URI: "https://88.197.53.106:8095/auth/realms/MIP/protocol/openid-connect/userinfo"
      TOKEN_URI: "https://88.197.53.106:8095/auth/realms/MIP/protocol/openid-connect/token"
      LOGOUT_URI: "https://88.197.53.106:8095/auth/realms/MIP/protocol/openid-connect/logout"
      
      #docker keycloak no certificate
      #AUTH_URI: "http://88.197.53.10:8095/auth/realms/Demo/protocol/openid-connect/auth"
      #USER_INFO_URI: "http://88.197.53.10:8095/auth/realms/Demo/protocol/openid-connect/userinfo"
      #TOKEN_URI: "http://88.197.53.10:8095/auth/realms/Demo/protocol/openid-connect/token"
      #LOGOUT_URI: "http://88.197.53.10:8095/auth/realms/Demo/protocol/openid-connect/logout"
      
      #remote keycloak
      #AUTH_URI: "https://iam.humanbrainproject.eu/auth/realms/MIPTEST/protocol/openid-connect/auth"
      #USER_INFO_URI: "https://iam.humanbrainproject.eu/auth/realms/MIPTEST/protocol/openid-connect/userinfo"
      #TOKEN_URI: "https://iam.humanbrainproject.eu/auth/realms/MIPTEST/protocol/openid-connect/token"
      
      KEYCLOAK_URL: "88.197.53.106"
    depends_on:
      - db
    volumes:
      - ./data:/opt/portal/api
      - ./logs:/opt/portal/logs
      
  wait_portal_backend:
    image: "waisbrot/wait"
    restart: "no"
    environment:
      TARGETS: "portalbackend:8080"
      TIMEOUT: 60
    depends_on:
      - portalbackend

  frontend:
    image: hbpmip/portal-frontend:5.1.11-58-g15c70130
    depends_on:
      - portalbackend
    ports:
      - "80:80"
    environment:
      WORKER_PROCESSES: 1
      ERROR_LOG_LEVEL: warn
      PORTAL_VIRTUAL_HOST: frontend
      PORTAL_BACKEND_SERVER: portalbackend:8080
      PORTAL_BACKEND_CONTEXT: services
      MODE: federation
      INSTANCE_NAME: "MIP 5.0.0"
      VERSION: "5.0.0"
      TRACKER_ID: UA-80660232-5
      GALAXY_URL: "http://88.197.53.106:8090/nativeGalaxy"
      
  postgres:
      image: postgres
      #volumes:
        #- ./postgres_data:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: password
  
  keycloak:
      image: jboss/keycloak
      volumes:
        - ./certs:/etc/x509/https
        - ./tmp/mip.json:/tmp/mip.json
        - ./tmp:/tmp
      environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: postgres
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_SCHEMA: public
        DB_PASSWORD: password
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: Pa55w0rd
        KEYCLOAK_IMPORT: /tmp/mip.json
        # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
        #JDBC_PARAMS: "ssl=true"
      ports:
        #- "8095:8095"
        - "8095:8095"
        - "8443:8443"
      depends_on:
        - postgres
